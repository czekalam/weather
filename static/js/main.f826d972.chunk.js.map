{"version":3,"sources":["components/Search.js","components/Markers.js","components/WeatherMap.js","actions/index.js","components/Main.js","components/Graph.js","components/Weather.js","components/Details.js","components/App.js","reducers/index.js","reducers/items.js","store.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","value","target","handleSubmit","history","push","concat","state","react_default","a","createElement","className","Link","to","pathname","style","textDecoration","onSubmit","type","onChange","index_es","icon","Component","withRouter","Markers","createMarkers","marker","places","i","length","place","coord","Marker","onClick","e","options","name","position","Lat","Lon","Tooltip","WeatherMap","mapInteract","setViewCoords","searchViewPlaces","_zoom","view","refs","map","leafletElement","getBounds","zoom","coords","right","_northEast","lng","left","_southWest","up","lat","bottom","fetch","then","res","json","items","markers","list","catch","err","console","log","center","latitude","longitude","Map","onMoveEnd","ref","TileLayer","url","attribution","components_Markers","mapDispatchToProps","setView","setItems","WeatherMapContainer","connect","geolocated","Main","Graph","chart","configureChart","chartCanvas","ReactDOM","findDOMNode","days","day","Date","dt_txt","temp","Math","round","main","rain","Chart","data","datasets","label","yAxisID","backgroundColor","pointBackgroundColor","pointBorderColor","labels","legend","display","scales","yAxes","id","ticks","beginAtZero","xAxes","time","unit","_this2","width","React","Weather","filterResults","keyword","result","cloud","faSun","faCloudSun","faCloud","wind","cod","clouds","all","temp_max","temp_min","speed","deg","lon","humidity","pressure","alt","src","sys","sunrise","getHours","getMinutes","sunset","Details","forecast","match","params","city","components_Weather","components_Graph","DetailsContainer","library","add","faSearch","App","BrowserRouter","Route","path","process","component","exact","combineReducers","arguments","undefined","action","store","createStore","reducers","applyMiddleware","ReduxThunk","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f826d972.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport '../style/Search.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    Link\n  } from 'react-router-dom';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\"\n        }\n    }\n    handleChange=(event) => {\n        this.setState({\n            value: event.target.value\n        });\n    }\n    handleSubmit=(event) => {\n        this.props.history.push(`/${this.state.value}`);\n    }\n    render() {\n        return (\n            <div className='search'>\n                <Link to={ {pathname: '/'}} style={{ textDecoration: 'none' }}>\n                    <p className='title'>Weather Search</p>\n                </Link>\n                <form onSubmit={this.handleSubmit}>\n                    <input className='text-input' type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    <button className='submit'><FontAwesomeIcon icon=\"search\" /></button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default withRouter(Search);","import { Tooltip, Marker } from \"react-leaflet\";\nimport React, { Component } from 'react';\nimport '../style/Markers.css';\nimport { withRouter } from \"react-router-dom\";\n\nclass Markers extends Component {\n  createMarkers = () => {\n    var marker = [];\n    var places = this.props.places?this.props.places:()=>0;\n    for (var i = 0; i < places.length; i++) {\n      var place = places[i].coord;\n      // console.log(place);\n      marker[i] =\n        <Marker \n        place={places[i]} \n        onClick={(e) => \n          // console.log(e.target.options.place.name)\n          this.props.history.push(`/${e.target.options.place.name}`)}\n         position={[place.Lat, place.Lon]}>\n          <Tooltip>{places[i].name}</Tooltip>\n        </Marker>;\n    }\n    return marker;\n  }\n  render() {\n    return (\n      <div className='markers'>\n        {this.createMarkers()}\n      </div>\n    );\n  }\n}\nexport default withRouter(Markers);","import { Map, TileLayer } from \"react-leaflet\";\nimport React, { Component } from 'react';\nimport {setView,setItems} from '../actions';\nimport { connect } from 'react-redux';\nimport { geolocated } from 'react-geolocated';\nimport Markers from \"./Markers\";\n\nclass WeatherMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      markers:null,\n      view:null\n    };\n  }\n  componentDidUpdate() {\n    if(!this.state.view) {\n      this.setViewCoords();\n    }\n    if((this.props.coords)&&(!this.state.markers)) {\n      this.searchViewPlaces(8);\n    }\n  }\n  mapInteract = (e) => {\n    this.setViewCoords();\n    this.searchViewPlaces(e.target._zoom);\n  }\n  setViewCoords = () => {\n    var view = this.refs.map.leafletElement.getBounds();\n    this.setState({view:view});\n  }\n  searchViewPlaces = (zoom) => {\n    var coords=this.state.view;\n    if(!coords) {\n      return 0;\n    }\n    var right = coords._northEast.lng;\n    var left = coords._southWest.lng;\n    var up = coords._northEast.lat;\n    var bottom = coords._southWest.lat;\n    if(zoom>7) {\n      fetch(`https://api.openweathermap.org/data/2.5/box/city?bbox=${right},${up},${left},${bottom},${zoom}&appid=10eef0d5859a79e048209ecd86701ac1`)\n      .then(res=> res.json())\n      .then(items=>this.setState({markers:items.list}))\n      .catch(err=>console.log(err));\n    }\n  };\n  render() {\n    var center = this.props.center?this.props.center: this.props.coords?[this.props.coords.latitude,this.props.coords.longitude]:[0,0];\n    var zoom = this.props.zoom?this.props.zoom:8;\n    // var markers = this.props.markers?this.props.markers:[];\n    return (\n      <div className='map'>\n        <Map onMoveEnd={this.mapInteract} center={center} zoom={zoom} ref='map'>\n          <TileLayer\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          <Markers places={this.state.markers}/>\n        </Map>\n      </div>\n    );\n  }\n}\nexport default WeatherMap;\n\nconst mapDispatchToProps = {setView,setItems };\nconst mapStateToProps = state => {\n    return {\n      items: state.items,\n      view: state.view\n  };\n};\nexport const WeatherMapContainer = connect(mapStateToProps,mapDispatchToProps)(geolocated()(WeatherMap));","export const setItems = items => ({\n    type: 'SET_ITEMS',\n    items\n});\nexport const setView = view => ({\n    type: 'SET_VIEW',\n    view\n});","import React, { Component } from 'react';\nimport {WeatherMapContainer} from './WeatherMap';\n\nclass Main extends Component {\n  render() {\n    return (\n        <WeatherMapContainer/>\n    );\n  }\n}\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Chart from 'chart.js';\nimport '../style/Graph.css';\n\nclass Graph extends React.Component {\n    chart = null;\n    componentDidMount() {\n      this.configureChart();\n    }\n    configureChart = () => {\n      const chartCanvas = ReactDOM.findDOMNode(this.chart);\n      var days =this.props.days.map((day)=>new Date(day.dt_txt));\n      var temp = this.props.days.map((day=>Math.round(day.main.temp-273.15)));\n      var rain = this.props.days.map(day=>day.rain?day.rain['3h']:'');\n      // const mixedChart = \n      new Chart(chartCanvas, {\n        type: \"bar\",\n        data: {\n          datasets: [\n            {\n              label: \"Rain\",\n              yAxisID: 'Rain',\n              data: rain,\n              type: \"bar\",\n              backgroundColor: \"#ff4\"\n            },\n            {\n              label: \"Temperature\",\n              yAxisID: 'Temperature',\n              data: temp,\n              type: \"line\",\n              backgroundColor: \"#9f9\",\n              pointBackgroundColor: \"rgba(0, 0, 0, 0)\",\n              pointBorderColor: \"rgba(0, 0, 0, 0)\"\n            }\n          ],\n          labels: days\n        },\n        options: {\n          legend: {\n            display: true,\n            position: \"bottom\"\n          },\n          scales: {\n            yAxes: [\n              {\n                id: 'Temperature',\n                display: true,\n                ticks: {\n                  beginAtZero: true\n                }\n              },\n              {\n                id: 'Rain',\n                display: true,\n                ticks: {\n                  beginAtZero: true\n                }\n              }\n            ],\n            xAxes: [\n              {\n                type: 'time',\n                time: {\n                  unit: 'day'\n                }\n              }\n            ]\n          }\n        }\n      });\n    };\n  \n    render() {\n      return (\n        <div className='graph' style={{width:500+'px'}}>\n          <canvas \n            ref={chart => {\n              this.chart = chart;\n            }}\n          />\n        </div>\n      );\n    }\n  }\nexport default Graph;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloud, faCloudSun } from '@fortawesome/free-solid-svg-icons';\nimport '../style/Result.css';\n\nclass Weather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: '',\n            days:''\n        }\n    }\n    filterResults = () => {\n        var keyword = this.props.keyword;\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${keyword}&appid=10eef0d5859a79e048209ecd86701ac1`)\n            .then(res => res.json())\n            .then(items => this.setState({\n                result: items\n            }))\n            .catch(err => console.log(err));\n\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${keyword}&appid=10eef0d5859a79e048209ecd86701ac1`)\n            .then(res=> res.json())\n            .then(items=> this.setState({days:items}))\n            .catch(err=>console.log(err))\n    }\n    componentDidMount() {\n        this.filterResults();\n    }\n    cloud = (result) => {\n        if (result < 33) {\n            return <FontAwesomeIcon icon={faSun} />;\n        }\n        else if (result< 66) {\n            return <FontAwesomeIcon icon={faCloudSun} />;\n        }\n        else if (result <= 100) {\n            return <FontAwesomeIcon icon={faCloud} />;\n        }\n        else {\n            return '';\n        }\n    }\n    wind = (wind) => {\n        if (wind === 0) {\n            return 'N';\n        }\n        else if (wind < 90) {\n            return 'NE'\n        }\n        else if (wind === 90) {\n            return 'E';\n        }\n        else if (wind < 180) {\n            return 'SE';\n        }\n        else if (wind === 180) {\n            return 'S';\n        }\n        else if (wind < 270) {\n            return 'SW';\n        }\n        else if (wind === 270) {\n            return 'W';\n        }\n        else if (wind < 360) {\n            return 'NW'\n        }\n    }\n    render() { \n        var result = this.state.result;\n        console.log(result);\n        return (\n            <div className='result'>\n                {result.cod === 200 ?\n                    <div className='data'>\n                        <p className='name'>{result.name}</p>\n                        <p className=\"clouds\"> {this.cloud(result.clouds.all)}</p>\n                        <div className='temperature'>\n                            <div className='average'>{Math.round(result.main.temp - 273.15)}°C</div>\n                            <div className='maxmin'>\n                                <div className='max'>max {Math.round(result.main.temp_max - 273.15)}°C</div>\n                                <div className='min'>min {Math.round(result.main.temp_min - 273.15)}°C</div>\n                            </div>\n                        </div>\n                        <p>Wind {result.wind.speed + \"m/s \" + this.wind(result.wind.deg)}</p>\n                        <p>Coords {result.coord.lat + \" \" + result.coord.lon}</p>\n                        <p>Humidity {result.main.humidity}%</p>\n                        <p>Pressure {result.main.pressure}hPa</p>\n                        <div className='suntime'>\n                            <img alt=\"sunrise\" src=\"https://img.icons8.com/color/48/000000/sunrise.png\"></img>\n                            {new Date(result.sys.sunrise * 1000).getHours()}:{new Date(result.sys.sunrise * 1000).getMinutes()}\n                            <img alt=\"sunset\" src=\"https://img.icons8.com/color/48/000000/sunset.png\"></img>\n                            {new Date(result.sys.sunset * 1000).getHours()}:{new Date(result.sys.sunset * 1000).getMinutes()}\n                        </div>\n                    </div>\n                : ''}\n            </div>\n        );\n    }\n}\nexport default Weather;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { geolocated } from 'react-geolocated';\nimport '../style/Result.css';\nimport Graph from './Graph';\nimport Weather from './Weather';\nimport { withRouter } from \"react-router-dom\";\n\nclass Details extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            forecast:null\n        }\n    }\n    componentDidMount() {\n        var keyword = this.props.match.params.city;\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${keyword}&appid=10eef0d5859a79e048209ecd86701ac1`)\n            .then(res=> res.json())\n            .then(data=> this.setState({forecast:data}))\n            .catch(err=>console.log(err));\n    }\n    render() { \n        var forecast = this.state.forecast;\n        return (\n            <div className='days'>\n                <Weather keyword={this.props.match.params.city}/>\n                {forecast?\n                <Graph days={forecast.list}/>\n                :''} \n            </div>\n        );\n    }\n}\nexport default withRouter(Details);\nconst mapDispatchToProps = {};\nconst mapStateToProps = state => {\n    return {\n        items: state.items\n    };\n};\nexport const DetailsContainer = connect(mapStateToProps, mapDispatchToProps)(geolocated()(Details));","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport '../style/reset.css';\nimport '../style/App.css';\nimport Search from './Search';\nimport Main from './Main';\nimport {DetailsContainer} from './Details';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faSearch);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app container\">\n        <Router>\n          <div>\n            <Route path={process.env.PUBLIC_URL + '/'} component={Search}/>\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={Main}/>\n            <Route exact path={process.env.PUBLIC_URL + '/:city'} component={DetailsContainer}/> \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;","import { combineReducers} from 'redux';\nimport {items,view } from './items';\n\n\nexport default combineReducers({items,view});","export const items = (state='', action) => {\n    switch(action.type) {\n        case 'SET_ITEMS':\n            return action.items;\n        default:\n            return state;\n    }\n}\nexport const view = (state='',action) => {\n    switch(action.type) {\n        case 'SET_VIEW':\n            return action.view\n        default:\n            return state;\n    }\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers'; \n\nexport const store = createStore(reducers,applyMiddleware(ReduxThunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));"],"sourceRoot":""}